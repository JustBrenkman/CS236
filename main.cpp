#include <string>
#include <iostream>
#include <fstream>
#include "FiniteStateMachine.h"
#include "LexicalAnalyzer.h"
#include "DataParser.h"

// Just some constants for niceties
const int FILE_INPUT = 1;

int main(int argc, char** argv) {

    try {
        if (argc > 0) {
            // Create a file stream to pull in the file data
            std::ifstream file(argv[FILE_INPUT]);

            std::string str;
            // Copy over the whole file into the string we just created
            file.seekg(0, std::ios::end);
            str.reserve(static_cast<unsigned long>((int)file.tellg()));
            file.seekg(0, std::ios::beg);

            str.assign((std::istreambuf_iterator<char>(file)), std::istreambuf_iterator<char>());

            // Create our Lexical Analyzer and proccess the string
            auto* lex = new LexicalAnalyzer;
            lex->proccessInput(str);


            DataParser dataParser(lex);



            lex->clean();

            // Output the values generated by the lexical analyzer
            std::cout << lex << std::endl;
        } else {
            std::cout << "No input file specified" << std::endl;
        }
    }
    catch (std::string& e) {
        // If there was an error with the lex or FSM ouput it here
        std::cout << e << std::endl;
    }

    return 0;
}
